{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise MRG 2",
      "fix_state": "Will not fix",
      "package_name": "qpid-java",
      "cpe": "cpe:/a:redhat:enterprise_mrg:2"
    },
    {
      "product_name": "Red Hat Enterprise MRG 3",
      "fix_state": "Will not fix",
      "package_name": "qpid-java",
      "cpe": "cpe:/a:redhat:enterprise_mrg:3"
    },
    {
      "product_name": "Red Hat Satellite 6",
      "fix_state": "Not affected",
      "package_name": "qpid-java",
      "cpe": "cpe:/a:redhat:network_satellite:6"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2016-07-02T00:00:00Z",
  "bugzilla": {
    "description": "\nCVE-2016-4974 qpid-java: Deserialization of untrusted input while using JMS ObjectMessage\n    ",
    "id": "1352481",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1352481"
  },
  "cvss": {
    "cvss_base_score": "5.1",
    "cvss_scoring_vector": "AV:N/AC:H/Au:N/C:P/I:P/A:P",
    "status": "draft"
  },
  "cvss3": {
    "cvss3_base_score": "5.6",
    "cvss3_scoring_vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
    "status": "draft"
  },
  "iava": "",
  "cwe": "CWE-502",
  "statement": "\nRed Hat Enterprise MRG 2: \nThis vulnerability has been rated as having a security impact of Moderate. After evaluation and in accordance with the criteria noted in the product support life cycle, there are no plans to address this issue in an upcoming release. Please contact Red Hat Support for further information.\n\nRed Hat Enterprise MRG 3: \nThis vulnerability has been rated as having a security impact of Moderate. After evaluation and in accordance with the criteria noted in the product support life cycle, there are no plans to address this issue in an upcoming release. Please contact Red Hat Support for further information.\n    ",
  "acknowledgement": "",
  "name": "CVE-2016-4974",
  "document_distribution": "",
  "details": [
    "\nApache Qpid AMQP 0-x JMS client before 6.0.4 and JMS (AMQP 1.0) before 0.10.0 does not restrict the use of classes available on the classpath, which might allow remote authenticated users with permission to send messages to deserialize arbitrary objects and execute arbitrary code by leveraging a crafted serialized object in a JMS ObjectMessage that is handled by the getObject function.\n    "
  ],
  "references": null
}