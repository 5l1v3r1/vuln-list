{
  "bugzilla": {
    "description": "\nCVE-2010-3192 glibc: __fortify_fail may use corrupted memory when called from SSP callback\n    ",
    "id": "643396",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=643396"
  },
  "cvss": {
    "cvss_base_score": "2.1",
    "cvss_scoring_vector": "AV:L/AC:L/Au:N/C:P/I:N/A:N",
    "status": "draft"
  },
  "details": [
    "\nCertain run-time memory protection mechanisms in the GNU C Library (aka glibc or libc6) print argv[0] and backtrace information, which might allow context-dependent attackers to obtain sensitive information from process memory by executing an incorrect program, as demonstrated by a setuid program that contains a stack-based buffer overflow error, related to the __fortify_fail function in debug/fortify_fail.c, and the __stack_chk_fail (aka stack protection) and __chk_fail (aka FORTIFY_SOURCE) implementations.\n    "
  ],
  "name": "CVE-2010-3192",
  "public_date": "2010-04-27T00:00:00",
  "statement": "\nThe Red Hat Security Response Team has rated this issue as having low security\nimpact. We do not currently plan to fix this flaw. If more information becomes available at a future date, we may revisit the issue.\n    ",
  "threat_severity": "Low"
}