{
  "IssueID": 8638,
  "VulnerabilityID": "CVE-2018-7537",
  "Release": "3.6",
  "Package": "py-django",
  "Repository": "main",
  "FixedVersion": "1.11.11-r0",
  "Subject": "[3.6] py-django: Multiple vulnerabilitie (CVE-2018-7536, CVE-2018-7537)",
  "Description": "h2. CVE-2018-7536: Denial-of-service possibility in urlize and urlizetrunc template filters\r\n\r\nThe django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic \r\nbacktracking vulnerabilities in two regular expressions (one regular expression for Django 1.8). The urlize() \r\nfunction is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.\r\n\r\nh3. Fixed In Version:\t\r\n\r\nDjango 2.0.3, Django 1.11.11, Django 1.8.19\t\r\n\r\nh3. References:\r\n\r\nhttps://www.djangoproject.com/weblog/2018/mar/06/security-releases/\r\nhttp://openwall.com/lists/oss-security/2018/03/06/4\r\n\r\n\r\nh2. CVE-2018-7537: Denial-of-service possibility in truncatechars_html and truncatewords_html template filters\r\n\r\nIf django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were \r\nextremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. \r\nThe chars() and words() methods are used to implement the truncatechars_html and truncatewords_html \r\ntemplate filters, which were thus vulnerable.\r\n\r\nh3. Fixed In Version:\t\r\n\r\nDjango 2.0.3, Django 1.11.11, Django 1.8.19\t\r\n\r\nh3. References:\r\n\r\nhttps://www.djangoproject.com/weblog/2018/mar/06/security-releases/\r\nhttp://openwall.com/lists/oss-security/2018/03/06/4\r\n"
}