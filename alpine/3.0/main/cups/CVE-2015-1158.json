{
  "IssueID": 4354,
  "VulnerabilityID": "CVE-2015-1158",
  "Release": "3.0",
  "Package": "cups",
  "Repository": "main",
  "FixedVersion": "1.7.4-r2",
  "Subject": "[v3.0] cups: Improper Update of Reference Count and Cross-Site Scripting (CVE-2015-1158, CVE-2015-1159)",
  "Description": "We received a report from Google that cupsd can be exploited to perform a privilege escalation using a combination of bugs and the dynamic linker's support for (pre)loading or redirecting which shared libraries are used by the cups-exec helper program.\r\n\r\nThe exact attack does the following:\r\n\r\n\r\n1. Use the CGI template engine to inject malicious HTML in a hyperlink, which is executed by the browser (a similar attack could be performed by a specially written program)\r\n2. A specially-crafted print-job or create-job request is sent to cupsd containing the job-originating-host-name attribute with multiple nameWithLanguage values - this triggers a validation error in cupsd, which then tries to free the language strings multiple times.\r\n3. The language string passed in is /admin, which causes the cupsd.conf ACL's copy of the string to become corrupted, allowing anyone to PUT a new cupsd.conf file.\r\n4. A new cupsd.conf file is uploaded to cupsd containing SetEnv directives (for DYLD_PRELOAD or LD_PRELOAD) pointing to a malicious dynamic library.\r\n5. The next job or request that triggers the execution of a helper program through cups-exec, and the dynamic linker loads the malicious code. Depending on the version of CUPS and platform, the code will execute either as the \"lp\" user or \"root\".\r\n\r\nThis attack can be done remotely when printer sharing and the web interface is enabled, using failed POST or PUT requests to collect stale request files in the CUPS spool directory containing the malicious code.\r\n\r\nThis bug tracks resolution of this privilege escalation issue through the following changes:\r\n\r\n\r\n- cupsd should use the ippSetCount and ippSetString APIs rather than manipulating the string values directly, particularly for the processing of the job-originating-host-name attribute.\r\n- cupsd shouldn't use string pool for config stuff\r\n- cupsd should remove temp files on partial POST/PUT- cupsd shouldn't support LD_* and DYLD_* variables when running as root\r\n- Need to call cgiClearVariables in more places to prevent input from leaking into output\r\n- Add new cgiSetVariable function to flag variables that are already encoded HTML, and only give them special treatment\r\n\r\nFix:\r\n\r\n\r\nCUPS 2.0.3\r\n\r\nReference: http://www.cups.org/str.php?L4609\r\n"
}