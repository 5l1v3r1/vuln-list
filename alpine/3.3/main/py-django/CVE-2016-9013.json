{
  "IssueID": 6464,
  "VulnerabilityID": "CVE-2016-9013",
  "Release": "3.3",
  "Package": "py-django",
  "Repository": "main",
  "FixedVersion": "1.8.16-r0",
  "Subject": "[3.3] py-django: security issues (CVE-2016-9013, CVE-2016-9014)",
  "Description": "h2. CVE-2016-9013: User with hardcoded password created when running tests on Oracle\r\n\r\nWhen running tests with an Oracle database, Django creates a temporary database user. \r\nIn older versions, if a password isn't manually specified in the database settings TEST dictionary, \r\na hardcoded password is used. This could allow an attacker with network access to the database server to connect.\r\n\r\nh2. CVE-2016-9014: DNS rebinding vulnerability when DEBUG=True\r\n\r\nOlder versions of Django don't validate the Host header against settings.ALLOWED_HOSTS when settings.DEBUG=True. \r\nThis makes them vulnerable to a DNS rebinding attack.\r\n\r\nWhile Django doesn't ship a module that allows remote code execution, this is at least a cross-site scripting \r\nvector, which could be quite serious if developers load a copy of the production database in development or connect\r\nto some production services for which there's no development instance, for example. If a project uses a package like\r\nthe django-debug-toolbar, then the attacker could execute arbitrary SQL, which could be especially bad if the \r\ndevelopers connect to the database with a superuser account.\t\r\n\r\n\r\n\r\nh3. Fixed In Version: \t\r\n\r\nDjango 1.10.3, Django 1.9.11, *Django 1.8.16*\r\n\r\nh3. Reference:\r\n\r\nhttps://www.djangoproject.com/weblog/2016/nov/01/security-releases/\r\n"
}