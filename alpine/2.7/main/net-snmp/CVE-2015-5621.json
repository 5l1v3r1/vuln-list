{
  "IssueID": 4499,
  "VulnerabilityID": "CVE-2015-5621",
  "Release": "2.7",
  "Package": "net-snmp",
  "Repository": "main",
  "FixedVersion": "5.7.2.1-r2",
  "Subject": "[v2.7] net-snmp: snmp_pdu_parse() incompletely parsed varBinds left in list of variables (CVE-2015-5621)",
  "Description": "It was discovered that the snmp_pdu_parse() function could leave\r\nincompletely parsed varBind variables in the list of variables in\r\ncase the parsing of the SNMP PDU failed. If later processing tries to\r\noperate on the stale and incompletely processed varBind (e.g. when\r\nprinting the variables), this can lead to e.g. crashes or, possibly,\r\nexecution of arbitrary code (although I've only seen NULL pointer\r\ndereferences during my testing, I currently can't rule out code\r\nexecution completely).\r\n\r\nThe snmp_pdu_parse() function stores varBind variables in a list of\r\nnetsnmp_variable_list structures. Each time the function parses a new\r\nvarBind, a new netsnmp_variable_list item is allocated on the heap\r\nand linked to the list of variables. The problem is that this item\r\nis not removed from the list, even if snmp_pdu_parse() fails to\r\ncomplete the parsing.\r\n\r\nThe \"type\" member of the stale netsnmp_variable_list is not\r\nproperly initialized in case snmp_pdu_parse() returns early from the\r\nparsing. However, the \"type\" member is used to determine later code\r\npaths, which is why we see crashes in a variety of functions,\r\nalthough the root cause for all of these is the same.\r\n\r\nReferences:\r\nhttps://bugzilla.redhat.com/show_bug.cgi?id=1212408\r\n\r\nUpstream patch:\r\nhttps://sourceforge.net/p/net-snmp/code/ci/f23bcd3ac6ddee5d0a48f9703007ccc738914791/\r\n\r\nUpstream bug:\r\nhttps://sourceforge.net/p/net-snmp/bugs/2615/ (possibly restricted)\r\n\r\nReporter's mail to oss-security:\r\nhttp://www.openwall.com/lists/oss-security/2015/04/13/1\r\n"
}