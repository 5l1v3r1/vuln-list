{
  "IssueID": 2370,
  "VulnerabilityID": "CVE-2013-4547",
  "Release": "2.4",
  "Package": "nginx",
  "Repository": "main",
  "FixedVersion": "1.0.15-r1",
  "Subject": "[v2.4] nginx security advisory (CVE-2013-4547)",
  "Description": "http://mailman.nginx.org/pipermail/nginx-announce/2013/000125.html\r\n\r\nIvan Fratric of the Google Security Team discovered a bug in nginx,\r\nwhich might allow an attacker to bypass security restrictions in certain\r\nconfigurations by using a specially crafted request, or might have\r\npotential other impact (CVE-2013-4547).\r\n\r\nSome checks on a request URI were not executed on a character following\r\nan unescaped space character (which is invalid per HTTP protocol, but\r\nallowed for compatibility reasons since nginx 0.8.41).  One of the\r\nresults is that it was possible to bypass security restrictions like\r\n\r\n    location /protected/ {\r\n        deny all;\r\n    }\r\n\r\nby requesting a file as \"/foo /../protected/file\" (in case of static\r\nfiles, only if there is a \"foo \" directory with a trailing space), or to\r\ntrigger processing of a file with a trailing space in a configuration\r\nlike\r\n\r\n    location ~ \\.php$ {\r\n        fastcgi_pass ...\r\n    }\r\n\r\nby requesting a file as \"/file \\0.php\".\r\n\r\nThe problem affects nginx 0.8.41 - 1.5.6.\r\n\r\nThe problem is fixed in nginx 1.5.7, 1.4.4.\r\n\r\nPatch for the problem can be found here:\r\n\r\nhttp://nginx.org/download/patch.2013.space.txt\r\n\r\nAs a temporary workaround the following configuration\r\ncan be used in each server{} block:\r\n\r\n    if ($request_uri ~ \" \") {\r\n        return 444;\r\n    } \r\n"
}