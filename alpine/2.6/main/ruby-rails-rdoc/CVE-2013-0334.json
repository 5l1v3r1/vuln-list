{
  "IssueID": 3474,
  "VulnerabilityID": "CVE-2013-0334",
  "Release": "2.6",
  "Package": "ruby-rails-rdoc",
  "Repository": "main",
  "FixedVersion": "3.12.2-r0",
  "Subject": "[v2.6] ruby-bundler: installation from rogue source vulnerability (CVE-2013-0334)",
  "Description": "Bundler 1.7 is a security-only release to address CVE-2013-0334, a vulnerability where a gem might be installed from an \r\nunintended source server, particularly while using both rubygems.org and gems.github.com.\r\n\r\nVersions Affected: All versions \u003c 1.7.0\r\nNot Affected: Any Gemfile with one or zero sources\r\n\r\nFixed Versions: 1.7.0\r\nReleases: 1.7.0 (2014-09-14)\r\n\r\nImpact:\r\n\r\nAny Gemfile with multiple top-level `source` lines cannot reliably control the gem server that a particular gem is \r\nfetched from. As a result, Bundler might install the wrong gem if more than one source provides a gem with the same \r\nname.\r\n\r\nThis is especially possible in the case of Github's legacy gem server, hosted at gems.github.com. An attacker might \r\ncreate a malicious gem on Rubygems.org with the same name as a commonly-used Github gem. From that point forward, \r\nrunning `bundle install` might result in the malicious gem being used instead of the expected gem.\r\n\r\nTo mitigate this, the Bundler and Rubygems.org teams worked together to copy almost every gem hosted on gems.github.com \r\nto rubygems.org, reducing the number of gems that can be used for such an attack.\r\n\r\nResolution:\r\n\r\nTo resolve this issue, upgrade to Bundler 1.7 by running `gem install bundler`. The next time you run `bundle install` \r\nfor any Gemfile that contains multiple sources, each gem available from multiple sources will print a warning.\r\n\r\nFor every warning printed, edit the Gemfile to either specify a `:source` option for that gem, or move the `gem` line \r\ninto a block that is passed to a `source` method call.\r\n\r\nWorkarounds:\r\n\r\nIf you are unable to upgrade to Bundler 1.7, it is possible to work around the issue by removing all but one `source` \r\nline from your Gemfile. Gems from other sources must be installed via the `:git` option, which is not susceptible to \r\nthis issue, or unpacked into the application repository and used via the `:path`option.\r\n\r\nUnfortunately, backporting a fix for this issue proved impractical, as previous versions of Bundler lacked the ability \r\nto distinguish between gem servers.\r\n\r\nCredits:\r\n\r\nThanks to Andreas Loupasakis and Fotos Georgiadis for reporting this issue, James Tucker, Tony Arcieri, Eric Hodel, \r\nMichael Koziarski, and Kurt Seifried for assistance with the eventual solution, and David Radcliffe for importing \r\nlegacy Github gems into Rubygems.org.\r\n\r\nAndr√© Arko (@indirect), Tim Moore (@tmoore), and the Bundler team (@bundlerio)\r\nteam () bundler io\r\n\r\nReferences:\r\nhttp://seclists.org/oss-sec/2014/q3/648\r\nhttp://bundler.io/v1.7/whats_new.html\r\nhttp://bundler.io/blog/2014/08/14/bundler-may-install-gems-from-a-different-source-than-expected-cve-2013-0334.html\r\n"
}